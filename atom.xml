<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BlueBerry&#39;s Blog</title>
  <icon>http://example.com/child/icon.png</icon>
  <subtitle>Talent in words, wisdom in books</subtitle>
  <link href="http://example.com/child/atom.xml" rel="self"/>
  
  <link href="http://example.com/child/"/>
  <updated>2020-09-27T01:49:55.288Z</updated>
  <id>http://example.com/child/</id>
  
  <author>
    <name>请给我一杯冰可乐</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript异常报错处理:&quot;Uncaught TypeError:xxx is not a function&quot;</title>
    <link href="http://example.com/child/2020/09/27/uncaught-typeError/"/>
    <id>http://example.com/child/2020/09/27/uncaught-typeError/</id>
    <published>2020-09-27T01:43:57.000Z</published>
    <updated>2020-09-27T01:49:55.288Z</updated>
    
    
    <summary type="html">页面报错 bug 是常有的事，我们可以根据错误 bug 提示关键性的去修复问题。依稀的记得之前有个小伙伴询问了一个 js 异常的错误 bug:&quot;Uncaught TypeError:xxx is not a function&quot;。这个错误问题定位处理起来很快，但是我却不知其所以然。为了弄清楚报错的深层面原因，去调研了关于错误的解决方案。学习吸取别人的经验，对这个常见的报错的原理有了新的认识，这次就分享总结 Uncaught TypeError 的错误原由以及解决方案。</summary>
    
    
    
    <category term="Javascript" scheme="http://example.com/child/categories/Javascript/"/>
    
    
    <category term="Uncaught TypeError" scheme="http://example.com/child/tags/Uncaught-TypeError/"/>
    
  </entry>
  
  <entry>
    <title>Rematch的深入学习与实战应用（一），简易数字计数器</title>
    <link href="http://example.com/child/2020/09/27/rematch-learning-actual/"/>
    <id>http://example.com/child/2020/09/27/rematch-learning-actual/</id>
    <published>2020-09-27T01:27:35.000Z</published>
    <updated>2020-09-27T01:42:28.796Z</updated>
    
    
    <summary type="html">近期在优化团队代码，发现 Redux 重复使用的代码过多。 经过调研发现了 Rematch 库：Redux 是一个出色的状态管理工具，并且有着健全的中间件生态以及出色的开发工具；Rematch 是没有 boilerplate 的 Redux 最佳实践。移除了声明 action 类型、action 创建函数、thunks、store 配置、mapDispatchToProps、sagas 等东西，大大简化了代码。故今天就来分享 Rematch 的用法。</summary>
    
    
    
    <category term="React" scheme="http://example.com/child/categories/React/"/>
    
    <category term="Javascript" scheme="http://example.com/child/categories/Javascript/"/>
    
    <category term="Rematch" scheme="http://example.com/child/categories/Rematch/"/>
    
    <category term="Redux" scheme="http://example.com/child/categories/Redux/"/>
    
    
    <category term="counter" scheme="http://example.com/child/tags/counter/"/>
    
  </entry>
  
  <entry>
    <title>前端学习之路，前端开发人员如何在团队中规范git commit提交记录</title>
    <link href="http://example.com/child/2020/09/25/git-commit-specification/"/>
    <id>http://example.com/child/2020/09/25/git-commit-specification/</id>
    <published>2020-09-25T12:29:45.000Z</published>
    <updated>2020-09-27T01:26:08.425Z</updated>
    
    
    <summary type="html">近期在 review 团队的部分代码，对比个人初期与如今的 git 提交记录，发现初期的提交记录简直是五花八门，言不由衷，让人一打眼看去就觉得这写的什么东西。一个好的 git 提交记录既方便个人快速的了解自我的工作进度、快速的回退版本等，又便于团队之间的协同开发。故分享一下当前最为规范、流行的 git commit 提交规范，希望这次分享可以帮助到你。</summary>
    
    
    
    <category term="Git" scheme="http://example.com/child/categories/Git/"/>
    
    
    <category term="commit" scheme="http://example.com/child/tags/commit/"/>
    
  </entry>
  
  <entry>
    <title>基于AntV图表库的Ant deSign Charts图表展示的简单应用</title>
    <link href="http://example.com/child/2020/09/25/ant-design-chart/"/>
    <id>http://example.com/child/2020/09/25/ant-design-chart/</id>
    <published>2020-09-25T12:18:13.000Z</published>
    <updated>2020-09-25T12:23:48.531Z</updated>
    
    
    <summary type="html">数据是我们每天都在接触的东西，我们需要清晰的了解去了解数据的变化趋势，就需要让数据可视化。最近在接触学习 Ant design 的社区精选组件，上一篇文章主要是讲了高德地图的应用，这次我们就来分享下 G2Plot 在 React 中实现可视化数据图表的简单应用。</summary>
    
    
    
    <category term="React" scheme="http://example.com/child/categories/React/"/>
    
    <category term="Ant design实战学习系列" scheme="http://example.com/child/categories/Ant-design%E5%AE%9E%E6%88%98%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="chart" scheme="http://example.com/child/tags/chart/"/>
    
  </entry>
  
  <entry>
    <title>基于React-Amap组件库的高德地图简单应用</title>
    <link href="http://example.com/child/2020/09/25/react-amap/"/>
    <id>http://example.com/child/2020/09/25/react-amap/</id>
    <published>2020-09-25T12:07:17.000Z</published>
    <updated>2020-09-25T12:26:04.105Z</updated>
    
    
    <summary type="html">平常生活中，地图导航是必不可少的，最近在学习 Ant design，了解了下社区的精选组件，看到了与地图相关的精品组件库，高德地图组件库。所以记录下这次高德地图的使用心得，既可以提升自己的业务多样性，也可以分享给需要的小伙伴。</summary>
    
    
    
    <category term="React" scheme="http://example.com/child/categories/React/"/>
    
    <category term="Ant design实战学习系列" scheme="http://example.com/child/categories/Ant-design%E5%AE%9E%E6%88%98%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="map" scheme="http://example.com/child/tags/map/"/>
    
    <category term="Gothe" scheme="http://example.com/child/tags/Gothe/"/>
    
  </entry>
  
  <entry>
    <title>高效的Coding，前端开发人员值得一看的前端开发工具</title>
    <link href="http://example.com/child/2020/09/25/efficient-coding/"/>
    <id>http://example.com/child/2020/09/25/efficient-coding/</id>
    <published>2020-09-25T11:38:13.000Z</published>
    <updated>2020-09-25T12:05:39.246Z</updated>
    
    
    <summary type="html">看着我稚嫩的代码，今天我应该也可以过个快乐的儿童节吧，哈哈哈哈哈。既然是儿童节，那我就要给小伙伴们发发礼物，什么礼物呢？那就是小编在使用的前端开发工具，保证你会有个难忘的儿童节。好，下面就由我带大家一一的看看礼物吧。</summary>
    
    
    
    <category term="Javascript" scheme="http://example.com/child/categories/Javascript/"/>
    
    <category term="CSS" scheme="http://example.com/child/categories/CSS/"/>
    
    <category term="HTML" scheme="http://example.com/child/categories/HTML/"/>
    
    
    <category term="plugin" scheme="http://example.com/child/tags/plugin/"/>
    
    <category term="tool" scheme="http://example.com/child/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>解决git pull拉取更新代码失败，unable to resolve reference ‘refs/remotes/origin/xxx分支名’:reference broken问题</title>
    <link href="http://example.com/child/2020/09/25/git-reference-broken/"/>
    <id>http://example.com/child/2020/09/25/git-reference-broken/</id>
    <published>2020-09-25T09:43:13.000Z</published>
    <updated>2020-09-25T09:46:59.547Z</updated>
    
    
    <summary type="html">近期在合并拉取代码，在合并分支代码时不知做了什么操作，使用 git pull 命令更新本地代码失败，显示本地分支参考关联损坏失效。</summary>
    
    
    
    <category term="Git" scheme="http://example.com/child/categories/Git/"/>
    
    
    <category term="reference" scheme="http://example.com/child/tags/reference/"/>
    
    <category term="git pull" scheme="http://example.com/child/tags/git-pull/"/>
    
  </entry>
  
  <entry>
    <title>position:sticky实现导航栏下滑吸顶效果</title>
    <link href="http://example.com/child/2020/09/25/sticky-nav-ceiling/"/>
    <id>http://example.com/child/2020/09/25/sticky-nav-ceiling/</id>
    <published>2020-09-25T09:34:35.000Z</published>
    <updated>2020-09-25T09:38:51.885Z</updated>
    
    
    <summary type="html">近期开发中遇到导航栏下滑吸顶的需求，经过方案调研，发现 position：sticky 可以简单快捷的实现功能。sticky（粘贴定位）可以被认为是相对定位和固定定位的混合，元素在跨越特定阀值前为相对定位，之后为固定定位。根据 sticky 的特性，只需要添加简单的几行 CSS 样式代码即可实现导航栏吸顶效果，大大的节省了开发效率。</summary>
    
    
    
    <category term="CSS" scheme="http://example.com/child/categories/CSS/"/>
    
    
    <category term="sticky" scheme="http://example.com/child/tags/sticky/"/>
    
    <category term="ceiling" scheme="http://example.com/child/tags/ceiling/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript保留三位有效数字</title>
    <link href="http://example.com/child/2020/09/25/js-keep-effective-num/"/>
    <id>http://example.com/child/2020/09/25/js-keep-effective-num/</id>
    <published>2020-09-25T09:13:01.000Z</published>
    <updated>2020-09-25T09:41:55.869Z</updated>
    
    
    <summary type="html">在之前的文章中有讲过保留两位小数的实现，最近在开发活动页面时，依旧是展示参赛作品的点赞数。当点赞数过万时，显示三位有效数字来展示点赞数，例如：1.56 万、23.1 万等。经过探索，找到了 toPrecision() 方法，在 MDN 中是这样概述该方法的：toPrecision() 方法以指定的精度返回该数值对象的字符串表示。我们可以改变该方法的 percision 参数来定义需要保留多少位有效数，话不多说，具体脚本代码如下。</summary>
    
    
    
    <category term="Javascript" scheme="http://example.com/child/categories/Javascript/"/>
    
    
    <category term="effectiveNumber" scheme="http://example.com/child/tags/effectiveNumber/"/>
    
  </entry>
  
  <entry>
    <title>封装属于自己的axios请求</title>
    <link href="http://example.com/child/2020/09/25/package-axios-request/"/>
    <id>http://example.com/child/2020/09/25/package-axios-request/</id>
    <published>2020-09-25T09:02:16.000Z</published>
    <updated>2020-09-25T09:07:19.976Z</updated>
    
    
    <summary type="html">axios 是一个基于 promise 的 HTTP 库，可以用于浏览器中进行 AJAX 请求处理。在项目中，为了实现通用性，封装了一个 axios 请求。</summary>
    
    
    
    <category term="axios" scheme="http://example.com/child/categories/axios/"/>
    
    
    <category term="request" scheme="http://example.com/child/tags/request/"/>
    
    <category term="promise" scheme="http://example.com/child/tags/promise/"/>
    
  </entry>
  
  <entry>
    <title>ref实现导航滚动定位</title>
    <link href="http://example.com/child/2020/09/25/ref-scroll-nav-position/"/>
    <id>http://example.com/child/2020/09/25/ref-scroll-nav-position/</id>
    <published>2020-09-25T08:36:54.000Z</published>
    <updated>2020-09-25T09:01:17.540Z</updated>
    
    
    <summary type="html">在开发项目中时常有点击跳转滚动到锚点的需求，最简单的锚点定位就是给一个 &lt;a&gt;&lt;/a&gt; 标签，&lt;a&gt;&lt;/a&gt; 标签的 href = ‘#锚点’，然后给需要跳转的锚点一个 id = ‘锚点’。参考最简单的锚点跳转实现方式，在 React 中使用 useRef 来实现跳转锚点的功能。</summary>
    
    
    
    <category term="React" scheme="http://example.com/child/categories/React/"/>
    
    <category term="Javascript" scheme="http://example.com/child/categories/Javascript/"/>
    
    
    <category term="navigation" scheme="http://example.com/child/tags/navigation/"/>
    
    <category term="ScrollPositioning" scheme="http://example.com/child/tags/ScrollPositioning/"/>
    
  </entry>
  
  <entry>
    <title>解决微信H5静默授权获取code以及H5页面历史回退死循环问题</title>
    <link href="http://example.com/child/2020/09/25/h5-silent-authorization/"/>
    <id>http://example.com/child/2020/09/25/h5-silent-authorization/</id>
    <published>2020-09-25T08:20:31.000Z</published>
    <updated>2020-09-25T08:34:10.661Z</updated>
    
    
    <summary type="html">近期在开发 H5 页面相关需求，需求中有个微信静默授权登录的功能，之前没有接触过这个功能，经过调研官方文档，开发出了初级方案；初级方案可以解决获取 code，但是页面返回上一个页面时，需要连续返回两次才可以回到上一个页面。经过获取流程分析，解决了返回循环的 bug。</summary>
    
    
    
    <category term="React" scheme="http://example.com/child/categories/React/"/>
    
    <category term="H5" scheme="http://example.com/child/categories/H5/"/>
    
    
    <category term="WxChat" scheme="http://example.com/child/tags/WxChat/"/>
    
    <category term="code" scheme="http://example.com/child/tags/code/"/>
    
    <category term="endlessLoop" scheme="http://example.com/child/tags/endlessLoop/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 保留两位小数</title>
    <link href="http://example.com/child/2020/09/25/js-two-decimal-places/"/>
    <id>http://example.com/child/2020/09/25/js-two-decimal-places/</id>
    <published>2020-09-25T08:10:01.000Z</published>
    <updated>2020-09-25T08:17:56.146Z</updated>
    
    
    <summary type="html">在开发中展示点赞数时，当数量级超过 10000 后，需要使用更加简洁的小数式去显现数量（例如 1.22 万）。下面就给大家分享数量小数式后保留两位小数的实现方式。</summary>
    
    
    
    <category term="Javascript" scheme="http://example.com/child/categories/Javascript/"/>
    
    
    <category term="decimal" scheme="http://example.com/child/tags/decimal/"/>
    
  </entry>
  
  <entry>
    <title>H5页面常见开发问题总结</title>
    <link href="http://example.com/child/2020/09/25/h5-bug-solution/"/>
    <id>http://example.com/child/2020/09/25/h5-bug-solution/</id>
    <published>2020-09-25T07:36:08.000Z</published>
    <updated>2020-09-25T08:05:52.139Z</updated>
    
    
    <summary type="html">最近在开发 H5，就在开发过程中发现 H5 存在着一些坑，所以就总结一下在开发过程中遇到的坑以及解决办法，本文会持续的更新，同时也欢迎大家一起评论分享 H5 开发中遇到的坑、解决办法等。</summary>
    
    
    
    <category term="React" scheme="http://example.com/child/categories/React/"/>
    
    <category term="H5" scheme="http://example.com/child/categories/H5/"/>
    
    
    <category term="微信分享" scheme="http://example.com/child/tags/%E5%BE%AE%E4%BF%A1%E5%88%86%E4%BA%AB/"/>
    
    <category term="input-keyboard" scheme="http://example.com/child/tags/input-keyboard/"/>
    
    <category term="QRCode" scheme="http://example.com/child/tags/QRCode/"/>
    
    <category term="video-level" scheme="http://example.com/child/tags/video-level/"/>
    
    <category term="首屏加载" scheme="http://example.com/child/tags/%E9%A6%96%E5%B1%8F%E5%8A%A0%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>Javascript判断客户端是Android还是IOS，判断浏览器类型</title>
    <link href="http://example.com/child/2020/09/25/judgment-browser-types/"/>
    <id>http://example.com/child/2020/09/25/judgment-browser-types/</id>
    <published>2020-09-25T07:21:09.000Z</published>
    <updated>2020-09-25T07:29:11.149Z</updated>
    
    
    <summary type="html">当在判断当前客户端是什么类型时，我们就可以根据客户端自带的 UA 标识，搭配正则判断机制来判断当前的客户端是什么设备。今天就分享下如何通过 Javascript 来获取客户端的 UA 标识，并判断客户端类型。</summary>
    
    
    
    <category term="Javascript" scheme="http://example.com/child/categories/Javascript/"/>
    
    <category term="H5" scheme="http://example.com/child/categories/H5/"/>
    
    
    <category term="browser" scheme="http://example.com/child/tags/browser/"/>
    
    <category term="userAgent" scheme="http://example.com/child/tags/userAgent/"/>
    
    <category term="Client" scheme="http://example.com/child/tags/Client/"/>
    
  </entry>
  
  <entry>
    <title>解决React中打开App或者下载App问题</title>
    <link href="http://example.com/child/2020/09/25/react-wake-app/"/>
    <id>http://example.com/child/2020/09/25/react-wake-app/</id>
    <published>2020-09-25T07:01:20.000Z</published>
    <updated>2020-09-25T07:30:22.362Z</updated>
    
    
    <summary type="html">最近在写 H5 页面，项目中有个唤醒 App 的功能，由于没有接触过这类功能，就去学习了一波大佬们的经验。在此分享出来和大家一起学习学习。</summary>
    
    
    
    <category term="React" scheme="http://example.com/child/categories/React/"/>
    
    <category term="H5" scheme="http://example.com/child/categories/H5/"/>
    
    
    <category term="唤醒" scheme="http://example.com/child/tags/%E5%94%A4%E9%86%92/"/>
    
  </entry>
  
  <entry>
    <title>解决 git stash pop 后git出现&quot;Another git process seems to be running in this repository......&quot;错误信息</title>
    <link href="http://example.com/child/2020/09/25/git-process-running-in-repository/"/>
    <id>http://example.com/child/2020/09/25/git-process-running-in-repository/</id>
    <published>2020-09-25T06:50:19.000Z</published>
    <updated>2020-09-25T06:57:51.295Z</updated>
    
    
    <summary type="html">当在 dev 开发分支开发新功能时，master 分支出现紧急 bug 需要修复，命令 git stash 就可以暂存当前 dev 分支的代码改动，切换到 master 分支解决紧急 bug。今天遇到一个 git 错误信息，是我在切回 dev 开发分支后把暂存的代码改动复原，但是代码复原后却无法提交，出现了 git 进程冲突的问题。具体错误信息如下:&quot;Another git process seems to be running in this repository, e.g.an editor opened by ‘git commit’. Please make sure all processes are terminated then try again. If it still fails, a git process may have crashed in this repository earlier:remove the file manually to continue.&quot;经过错误信息的解决方案调研，找到了具体有效的解决方案。</summary>
    
    
    
    <category term="Git" scheme="http://example.com/child/categories/Git/"/>
    
    
    <category term="进程冲突" scheme="http://example.com/child/tags/%E8%BF%9B%E7%A8%8B%E5%86%B2%E7%AA%81/"/>
    
    <category term="repository崩溃" scheme="http://example.com/child/tags/repository%E5%B4%A9%E6%BA%83/"/>
    
  </entry>
  
  <entry>
    <title>解决无法访问此网址，网址永久性地移动到新网址的问题（ERR_TUNNEL_CONNECTION_FAILED）</title>
    <link href="http://example.com/child/2020/09/25/connection-failed/"/>
    <id>http://example.com/child/2020/09/25/connection-failed/</id>
    <published>2020-09-25T06:40:10.000Z</published>
    <updated>2020-09-25T06:48:26.206Z</updated>
    
    
    <summary type="html">网址无缘无故出现访问失败的问题，昨天还可以轻松访问，今天就出现如下图的问题，经过搜索报错信息，找到了较有好的解决办法，现在一起分享给需要的朋友们。</summary>
    
    
    
    <category term="Internet" scheme="http://example.com/child/categories/Internet/"/>
    
    
    <category term="connection" scheme="http://example.com/child/tags/connection/"/>
    
    <category term="inaccessible" scheme="http://example.com/child/tags/inaccessible/"/>
    
  </entry>
  
  <entry>
    <title>解决React路由URL中hash(#)部分的显示 、browserHistory打包后浏览器刷新页面出现404的问题</title>
    <link href="http://example.com/child/2020/09/25/url-hash-404/"/>
    <id>http://example.com/child/2020/09/25/url-hash-404/</id>
    <published>2020-09-25T05:05:45.000Z</published>
    <updated>2020-09-25T05:12:42.451Z</updated>
    
    
    <summary type="html">在React项目中，我们需要采用它的路由库React-Router来进行页面跳转，React会根据路由URL来判断是哪个页面。常见的的URL有两种显示方式，一种是hashHistory的形式，形如：localhost:3000/#/free-lesson的路由，另一种是browserHistory的形式，形如：localhost:3000/person-center的真实URL路由。在实际项目中常常用真实的URL的方式，但是该形式存在一个隐藏的问题，就是项目打包后，浏览器页面刷新会出现404，为了解决这个问题，需要对服务器做简单的改动。</summary>
    
    
    
    <category term="React" scheme="http://example.com/child/categories/React/"/>
    
    <category term="Javascript" scheme="http://example.com/child/categories/Javascript/"/>
    
    
    <category term="URL" scheme="http://example.com/child/tags/URL/"/>
    
    <category term="nginx" scheme="http://example.com/child/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>从入门到入土JS知识(一)：关系操作符和相等操作符</title>
    <link href="http://example.com/child/2020/09/23/comparison-operation/"/>
    <id>http://example.com/child/2020/09/23/comparison-operation/</id>
    <published>2020-09-23T06:37:15.000Z</published>
    <updated>2020-09-25T05:03:12.609Z</updated>
    
    
    <summary type="html">在浏览技术网时，无意中发现一个同行问的问题，问题如下：‘ {} == {} 或 {} &gt; {} 输出false，为什么{} &gt;= {}输出true ？ ’。很有趣的问题，对啊为什么会这样呢，百思不得其解。为了理清这问题中的解题关键，我翻阅了JS红宝书以及温习了MDN网站中对关系运算符和相等运算符的知识点，终于是解开了问题的迷雾，看到了庐山真相。</summary>
    
    
    
    <category term="Javascript" scheme="http://example.com/child/categories/Javascript/"/>
    
    
    <category term="关系操作符" scheme="http://example.com/child/tags/%E5%85%B3%E7%B3%BB%E6%93%8D%E4%BD%9C%E7%AC%A6/"/>
    
    <category term="相等操作符" scheme="http://example.com/child/tags/%E7%9B%B8%E7%AD%89%E6%93%8D%E4%BD%9C%E7%AC%A6/"/>
    
  </entry>
  
</feed>
