<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BlueBerry&#39;s Blog</title>
  <icon>http://example.com/child/icon.png</icon>
  <subtitle>Talent in words, wisdom in books</subtitle>
  <link href="http://example.com/child/atom.xml" rel="self"/>
  
  <link href="http://example.com/child/"/>
  <updated>2020-09-23T06:45:10.513Z</updated>
  <id>http://example.com/child/</id>
  
  <author>
    <name>请给我一杯冰可乐</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>从入门到入土JS知识(一)：关系操作符和相等操作符</title>
    <link href="http://example.com/child/2020/09/23/comparison-operation/"/>
    <id>http://example.com/child/2020/09/23/comparison-operation/</id>
    <published>2020-09-23T06:37:15.000Z</published>
    <updated>2020-09-23T06:45:10.513Z</updated>
    
    
    <summary type="html">在浏览技术网时，无意中发现一个同行问的问题，问题如下：‘ {} == {} 或 {} &gt; {} 输出false，为什么{} &gt;= {}输出true ？ ’。很有趣的问题，对啊为什么会这样呢，百思不得其解。为了理清这问题中的解题关键，我翻阅了JS红宝书以及温习了MDN网站中对关系运算符和相等运算符的知识点，终于是解开了问题的迷雾，看到了庐山真相。</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>前端开发：mock.js的简单应用（生成随机数据，拦截 Ajax 请求）</title>
    <link href="http://example.com/child/2020/09/23/mockjs-application/"/>
    <id>http://example.com/child/2020/09/23/mockjs-application/</id>
    <published>2020-09-23T02:37:57.000Z</published>
    <updated>2020-09-23T03:05:55.333Z</updated>
    
    
    <summary type="html">在前端开发过程中，后端接口还没有完全开发完成时，前端开发人员就需要学会自己模拟后端接口数据，更快更好的完成开发任务。模拟后端接口数据的 js 库有很多，今天就简单就简单的分享下 mock.js 在前端开发的应用（嘿嘿，毕竟这个 mock 应用的开发人员较多）。</summary>
    
    
    
    <category term="Javascript" scheme="http://example.com/child/categories/Javascript/"/>
    
    
    <category term="模拟数据" scheme="http://example.com/child/tags/%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>自定义化antd的Modal组件并适配PC端部分分辨率</title>
    <link href="http://example.com/child/2020/09/23/customize-antd-modal/"/>
    <id>http://example.com/child/2020/09/23/customize-antd-modal/</id>
    <published>2020-09-23T02:21:24.000Z</published>
    <updated>2020-09-24T04:03:47.748Z</updated>
    
    
    <summary type="html">近期在做页面的优化，需要对 antd 的 Modal 组件模块进行精细的调优，简单地说就是给 Modal 二次美妆，提升用户的体验感。在此分享一下自己在实际逻辑代码中对美化 Modal 的理解，并用简单生动的 demo 来展示学习成果。</summary>
    
    
    
    <category term="React" scheme="http://example.com/child/categories/React/"/>
    
    <category term="Javascript" scheme="http://example.com/child/categories/Javascript/"/>
    
    <category term="CSS" scheme="http://example.com/child/categories/CSS/"/>
    
    
    <category term="适配PC" scheme="http://example.com/child/tags/%E9%80%82%E9%85%8DPC/"/>
    
  </entry>
  
  <entry>
    <title>如何使用classnames模块库为react动态添加class类样式</title>
    <link href="http://example.com/child/2020/09/23/dynamic-class-name/"/>
    <id>http://example.com/child/2020/09/23/dynamic-class-name/</id>
    <published>2020-09-23T01:49:10.000Z</published>
    <updated>2020-09-23T02:18:38.190Z</updated>
    
    
    <summary type="html">在react中添加动态的css时，传统的方式较为繁琐，今天刚好学习到一个模块库可以便捷的解决这个问题。对的，它就是“classnames”。</summary>
    
    
    
    <category term="React" scheme="http://example.com/child/categories/React/"/>
    
    <category term="CSS" scheme="http://example.com/child/categories/CSS/"/>
    
    
    <category term="dynamic" scheme="http://example.com/child/tags/dynamic/"/>
    
  </entry>
  
  <entry>
    <title>React import配置路径别名&#39;@&#39;，简化import Component的方式</title>
    <link href="http://example.com/child/2020/09/22/config-path-alias/"/>
    <id>http://example.com/child/2020/09/22/config-path-alias/</id>
    <published>2020-09-22T10:13:02.000Z</published>
    <updated>2020-09-22T10:38:00.784Z</updated>
    
    
    <summary type="html">在 React 中，大多数业务逻辑都组件化；极大的减轻了代码的冗余度，如果组件的层次比较深的话，组件的 import 就比较费劲，在 import 时使用“../../components/test”的方式，组件的 import 就会稍显混乱、组件代码不容易维护。为了可高效的、快速的维护组件代码，废弃“../../”的组件引入方式，配置一个组件路径重写的方式引入组件。</summary>
    
    
    
    <category term="React" scheme="http://example.com/child/categories/React/"/>
    
    <category term="Javascript" scheme="http://example.com/child/categories/Javascript/"/>
    
    
    <category term="path-alias" scheme="http://example.com/child/tags/path-alias/"/>
    
  </entry>
  
  <entry>
    <title>基于create-react-app脚手架，按需加载Ant design组件以及less样式</title>
    <link href="http://example.com/child/2020/09/22/antd-config-demand-loading/"/>
    <id>http://example.com/child/2020/09/22/antd-config-demand-loading/</id>
    <published>2020-09-22T09:45:04.000Z</published>
    <updated>2020-09-25T03:47:20.041Z</updated>
    
    
    <summary type="html">为了更好的书写 CSS 样式，在 React 中引入 less，在网上查询了许多关于 React 引入 less 样式文件的资料，大多数都是需要在 React 项目中 npm run eject 暴露出底层文件，然后在底层文件中修改 dev-env 的环境配置。在请教了大佬后知道可以根据 Ant design 官网文档中的高级配置来配备 less，通过 react-app-rewired 来对默认配置进行自定义化，在新的@2.x 版本中还需要下载 customize-cra。这样我们就可以在项目的根目录下创建一个配置文件来修改默认的配置了。详细介绍可以参考 Ant design 官方网站的高级配置文档。</summary>
    
    
    
    <category term="React" scheme="http://example.com/child/categories/React/"/>
    
    <category term="CSS" scheme="http://example.com/child/categories/CSS/"/>
    
    
    <category term="demand-loading" scheme="http://example.com/child/tags/demand-loading/"/>
    
    <category term="scaffold" scheme="http://example.com/child/tags/scaffold/"/>
    
    <category term="customize-cra" scheme="http://example.com/child/tags/customize-cra/"/>
    
    <category term="less" scheme="http://example.com/child/tags/less/"/>
    
  </entry>
  
  <entry>
    <title>解决npm ERR！Unexpected end of JSON input while paring near （解析附近时JSON输入意外结束）&#39;....&quot;^2.0.0-rc.0&quot;,&quot;glob&quot;&#39;等npm install错误</title>
    <link href="http://example.com/child/2020/09/22/JSON-perse-failure/"/>
    <id>http://example.com/child/2020/09/22/JSON-perse-failure/</id>
    <published>2020-09-22T09:22:37.000Z</published>
    <updated>2020-09-25T03:40:03.345Z</updated>
    
    
    <summary type="html">最近更新了一次node，但是更新后npm的命令总是会报Unexpected end of JSON input while parsing near &#39;...:&quot;^2.0.0-rc.0&quot;,&quot;glob&quot;&#39;npm ERR! Unexpected end of JSON input while parsing near &#39;...:&quot;^2.0.0-rc.0&quot;,&quot;glob&quot;&#39;的错误信息，导致无法进行正常的npm install。经过半天的错误信息搜索，找到了较为友好的解决办法。</summary>
    
    
    
    <category term="npm" scheme="http://example.com/child/categories/npm/"/>
    
    
    <category term="JSON" scheme="http://example.com/child/tags/JSON/"/>
    
    <category term="perse-failure" scheme="http://example.com/child/tags/perse-failure/"/>
    
  </entry>
  
  <entry>
    <title>React实现顶部固定滑动式导航栏</title>
    <link href="http://example.com/child/2020/09/22/top-fixed-sliding-nav/"/>
    <id>http://example.com/child/2020/09/22/top-fixed-sliding-nav/</id>
    <published>2020-09-22T08:26:54.000Z</published>
    <updated>2020-09-25T03:33:49.011Z</updated>
    
    
    <summary type="html">基于React的框架开发一个顶部固定滑动式的酷炫导航栏，当导航栏置顶时，导航栏沉浸在背景图片里；当鼠标滑动滚轮时，导航栏固定滑动并展示下拉样式。</summary>
    
    
    
    <category term="React" scheme="http://example.com/child/categories/React/"/>
    
    <category term="CSS" scheme="http://example.com/child/categories/CSS/"/>
    
    
    <category term="fixed-navbar" scheme="http://example.com/child/tags/fixed-navbar/"/>
    
    <category term="slide" scheme="http://example.com/child/tags/slide/"/>
    
  </entry>
  
  <entry>
    <title>React+Antd+Antd-Img-Crop实现上传固定大小的裁剪头像或者图片</title>
    <link href="http://example.com/child/2020/09/22/crop-upload/"/>
    <id>http://example.com/child/2020/09/22/crop-upload/</id>
    <published>2020-09-22T07:16:01.000Z</published>
    <updated>2020-09-25T03:36:07.516Z</updated>
    
    
    <summary type="html">在开发后台系统时，遇到一个上传图片并数量级别可控制的需求，经过技术调研最终确定了使用 antd-img-crop 搭配 Ant design 的 Upload 实现业务需求。本文主要讲述 React 配合 Ant design 以及 antd-img-crop 第三方库实现一个可控的图片上传功能。</summary>
    
    
    
    <category term="React" scheme="http://example.com/child/categories/React/"/>
    
    <category term="Javascript" scheme="http://example.com/child/categories/Javascript/"/>
    
    
    <category term="crop" scheme="http://example.com/child/tags/crop/"/>
    
    <category term="Ant design" scheme="http://example.com/child/tags/Ant-design/"/>
    
  </entry>
  
</feed>
